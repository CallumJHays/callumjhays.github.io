{"pageProps":{"source":{"compiledSource":"\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/ingydotnet/git-subrepo\"\n  }, \"git-subrepo\"), \" promises to be a simple-to-use replacement for git submodules and git subtree.\\nUnfortunately I found the readme to be quite hard to follow.\"), mdx(\"p\", null, \"Furthermore, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://blog.s-schoener.com/2019-04-20-git-subrepo/\"\n  }, \"the highest ranked tutorial on google\"), \"\\nmisses steps that cause the subrepo to be in a broken state, and the error message is extremely unhelpful.\"), mdx(\"p\", null, \"So, here's the steps I use to get it working as expected.\\nAll commands must be run from the root of the parent repo.\"), mdx(\"h2\", null, \"Cloning\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"git subrepo clone <remote-url> <subdir>\\n\")), mdx(\"h2\", null, \"Pulling\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"git subrepo pull <subdir>\\n\")), mdx(\"p\", null, \"If there were merge conflicts, follow the instructions in the error message.\\nI'm an avid vscode user, so I found it easier to open the merge conflict .git subdirectory in vscode,\\nand resolve the conflicts there before following the rest of the instructions.\"), mdx(\"p\", null, \"After pretty much every pull, you should run:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"git subrepo clean <subdir>\\n\")), mdx(\"p\", null, \"If you don't, any subsequent \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git subrepo push\"), \" \", mdx(\"span\", {\n    style: {\n      color: \"red\"\n    }\n  }, \"WILL FAIL with a cryptic error message.\")), mdx(\"h2\", null, \"Pushing\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"git subrepo push <subdir>\\n\")), mdx(\"h2\", null, \"Parting Words\"), mdx(\"p\", null, \"Hopefully this helps someone else out there get through the massive headache that is git-subrepo.\"), mdx(\"p\", null, \"Why they would design a CLI to be equivalent to git, but the require a different command\\nto be run with pretty much every usage without any proper indication of its necessity is beyond me.\"), mdx(\"p\", null, \"I will definitely be considering switching to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git subtree\"), \" in the future after this fiasco.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p><span><span class=\" cursor-pointer underline text-green-500\">git-subrepo</span></span> promises to be a simple-to-use replacement for git submodules and git subtree.\nUnfortunately I found the readme to be quite hard to follow.</p><p>Furthermore, <span><span class=\" cursor-pointer underline text-green-500\">the highest ranked tutorial on google</span></span>\nmisses steps that cause the subrepo to be in a broken state, and the error message is extremely unhelpful.</p><p>So, here&#x27;s the steps I use to get it working as expected.\nAll commands must be run from the root of the parent repo.</p><h2 class=\"mt-8\">Cloning</h2><pre><div class=\"my-2 rounded overflow-hidden\"><pre class=\"prism-code language-bash\" style=\"background-color:#2a2734;color:#9a86fd;padding:20px\"><div class=\"token-line\" style=\"color:#9a86fd\"><span class=\"token function\" style=\"color:#9a86fd\">git</span><span class=\"token plain\"> subrepo clone </span><span class=\"token operator\" style=\"color:#e09142\">&lt;</span><span class=\"token plain\">remote-url</span><span class=\"token operator\" style=\"color:#e09142\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#e09142\">&lt;</span><span class=\"token plain\">subdir</span><span class=\"token operator\" style=\"color:#e09142\">&gt;</span><span class=\"token plain\"></span></div></pre></div></pre><h2 class=\"mt-8\">Pulling</h2><pre><div class=\"my-2 rounded overflow-hidden\"><pre class=\"prism-code language-bash\" style=\"background-color:#2a2734;color:#9a86fd;padding:20px\"><div class=\"token-line\" style=\"color:#9a86fd\"><span class=\"token function\" style=\"color:#9a86fd\">git</span><span class=\"token plain\"> subrepo pull </span><span class=\"token operator\" style=\"color:#e09142\">&lt;</span><span class=\"token plain\">subdir</span><span class=\"token operator\" style=\"color:#e09142\">&gt;</span><span class=\"token plain\"></span></div></pre></div></pre><p>If there were merge conflicts, follow the instructions in the error message.\nI&#x27;m an avid vscode user, so I found it easier to open the merge conflict .git subdirectory in vscode,\nand resolve the conflicts there before following the rest of the instructions.</p><p>After pretty much every pull, you should run:</p><pre><div class=\"my-2 rounded overflow-hidden\"><pre class=\"prism-code language-bash\" style=\"background-color:#2a2734;color:#9a86fd;padding:20px\"><div class=\"token-line\" style=\"color:#9a86fd\"><span class=\"token function\" style=\"color:#9a86fd\">git</span><span class=\"token plain\"> subrepo clean </span><span class=\"token operator\" style=\"color:#e09142\">&lt;</span><span class=\"token plain\">subdir</span><span class=\"token operator\" style=\"color:#e09142\">&gt;</span><span class=\"token plain\"></span></div></pre></div></pre><p>If you don&#x27;t, any subsequent <span class=\"px-1 font-mono rounded gray bg-yellow-100\">git subrepo push</span> <span style=\"color:red\">WILL FAIL with a cryptic error message.</span></p><h2 class=\"mt-8\">Pushing</h2><pre><div class=\"my-2 rounded overflow-hidden\"><pre class=\"prism-code language-bash\" style=\"background-color:#2a2734;color:#9a86fd;padding:20px\"><div class=\"token-line\" style=\"color:#9a86fd\"><span class=\"token function\" style=\"color:#9a86fd\">git</span><span class=\"token plain\"> subrepo push </span><span class=\"token operator\" style=\"color:#e09142\">&lt;</span><span class=\"token plain\">subdir</span><span class=\"token operator\" style=\"color:#e09142\">&gt;</span><span class=\"token plain\"></span></div></pre></div></pre><h2 class=\"mt-8\">Parting Words</h2><p>Hopefully this helps someone else out there get through the massive headache that is git-subrepo.</p><p>Why they would design a CLI to be equivalent to git, but the require a different command\nto be run with pretty much every usage without any proper indication of its necessity is beyond me.</p><p>I will definitely be considering switching to <span class=\"px-1 font-mono rounded gray bg-yellow-100\">git subtree</span> in the future after this fiasco.</p>","scope":{"title":"Git-Subrepo Cheat Sheet","subtitle":"Git subrepo seems easy to use... until you try. Follow these simple steps to avoid the headache.","preview":"git.png","published":"10 Oct 2022","edited":"10 Oct 2022"}},"frontMatter":{"title":"Git-Subrepo Cheat Sheet","subtitle":"Git subrepo seems easy to use... until you try. Follow these simple steps to avoid the headache.","preview":"git.png","published":"10 Oct 2022","edited":"10 Oct 2022"}},"__N_SSG":true}